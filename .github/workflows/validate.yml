name: Validate

on:  # yamllint disable-line rule:truthy
  push:
    branches-ignore:
      - main

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        python-version:
          - "3.13"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - id: cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          path: .venv
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-

      - if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - run: poetry run ./scripts/lint.sh

  test:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        python-version:
          # We don't support Python 3.8
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - id: cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          path: .venv
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-

      - if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - run: poetry run pytest
